name: CI Pipeline

on:
  push:
    branches:
      - dev
      - release
    tags:
      - 'v*'

jobs:
  download:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

  build:
    needs: download
    runs-on: self-hosted
    environment: ${{ github.ref == 'refs/heads/dev' && 'dev' ||
                    github.ref == 'refs/heads/release' && 'qa' ||
                    startsWith(github.ref, 'refs/tags/v') && 'prod' }}
    env:
      PROJ: ${{ vars.PROJ }}
      APP: cdn
      ENV: ${{ vars.ENV }}
      REGISTRY: ${{ vars.REGISTRY }}
      REGISTRY_USERNAME: ${{ vars.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ vars.REGISTRY_PASSWORD }}
      IMAGE: $PROJ-$APP
      TAG: ${{ github.ref_type == 'tag' &&
              github.ref_name != null &&
              startsWith(github.ref_name, 'v') &&
              replace(github.ref_name, 'v', '') ||
              format('{0}-{1}', github.ref_name, github.run_number) }}
    steps:
      - name: Build container image
        run: |
          DOCKER_BUILDKIT=1 docker build \
            -t $IMAGE:$TAG \
            --build-context app=. \
            --target $ENV \
            .

  publish:
    needs: build
    runs-on: self-hosted
    environment: ${{ github.ref == 'refs/heads/dev' && 'dev' ||
                    github.ref == 'refs/heads/release' && 'qa' ||
                    startsWith(github.ref, 'refs/tags/v') && 'prod' }}
    env:
      PROJ: ${{ vars.PROJ }}
      APP: cdn
      ENV: ${{ vars.ENV }}
      REGISTRY: ${{ vars.REGISTRY }}
      REGISTRY_USERNAME: ${{ vars.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ vars.REGISTRY_PASSWORD }}
      IMAGE: $PROJ-$APP
      TAG: ${{ github.ref_type == 'tag' &&
              github.ref_name != null &&
              startsWith(github.ref_name, 'v') &&
              replace(github.ref_name, 'v', '') ||
              format('{0}-{1}', github.ref_name, github.run_number) }}

    steps:
      - name: Login into registry
        run: docker login -u $REGISTRY_USERNAME -P $REGISTRY_PASSWORD
      - name: Tag container image
        run: docker tag $IMAGE:$TAG $REGISTRY/$IMAGE:$TAG
      - name: Publish container image to registry
        run: docker push $REGISTRY/$IMAGE:$TAG
